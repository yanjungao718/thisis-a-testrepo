{
	"name": "Kusto Sample",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "70e94fd8-4993-4ccc-b369-b65f979922c5"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": "https://scq02goewttma9u3x6nv7upy.blob.core.windows.net:443/notebook/bdbj20220418ws/db84a1f2-148e-4205-b585-c62dc0ae80f3/2c2db158-58f1-4354-bd04-b81860807033/metadata-synapse_widget/synapse_widget.json",
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\n",
					"\n",
					"# Read data from Azure Data Explorer table(s)\n",
					"# Full Sample Code available at: https://github.com/Azure/azure-kusto-spark/blob/master/samples/src/main/python/SynapseSample.py\n",
					"\n",
					"kustoDf  = spark.read \\\n",
					"    .format(\"com.microsoft.kusto.spark.synapse.datasource\") \\\n",
					"    .option(\"spark.synapse.linkedService\", \"AzureDataExplorer\") \\\n",
					"    .option(\"kustoDatabase\", \"bdbjkustodatabaseqingtest\") \\\n",
					"    .option(\"kustoQuery\", \"Qingtest | take 10\") \\\n",
					"    .load()\n",
					"\n",
					"display(kustoDf)\n",
					""
				],
				"attachments": null,
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"kustoDf.write \\\r\n",
					"    .format(\"com.microsoft.kusto.spark.synapse.datasource\") \\\r\n",
					"    .option(\"spark.synapse.linkedService\", \"AzureDataExplorer\") \\\r\n",
					"    .option(\"kustoDatabase\", \"bdbjkustodatabaseqingtest\") \\\r\n",
					"    .option(\"kustoTable\", \"Qingtest0418\") \\\r\n",
					"    .option(\"tableCreateOptions\",\"CreateIfNotExist\") \\\r\n",
					"    .mode(\"Append\") \\\r\n",
					"    .save()"
				],
				"attachments": null,
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"from pyspark.sql.types import *\r\n",
					"customSchema = StructType([StructField('Id_P', IntegerType(), True),  \\\r\n",
					"                           StructField('LastName', StringType(), True), \\\r\n",
					"                           StructField('FirstName', StringType(), True), \\\r\n",
					"                           StructField('Address', StringType(), True), \\\r\n",
					"                           StructField('City', StringType(), True)] )\r\n",
					"                 \r\n",
					"\r\n",
					"dfStream = spark \\\r\n",
					"  .readStream \\\r\n",
					"  .schema(customSchema) \\\r\n",
					"  .csv(\"abfss://default@honghaigen2.dfs.core.windows.net/csv/\") \\\r\n",
					"\r\n",
					"spark.conf.set(\"spark.sql.streaming.checkpointLocation\", \"/localWriteCheckpointFolder\")\r\n",
					"spark.conf.set(\"spark.sql.codegen.wholeStage\", \"false\")\r\n",
					"\r\n",
					"kustoQ = dfStream \\\r\n",
					"    .writeStream \\\r\n",
					"    .format(\"com.microsoft.kusto.spark.synapse.datasink.KustoSynapseSinkProvider\") \\\r\n",
					"    .option(\"spark.synapse.linkedService\", \"AzureDataExplorer\") \\\r\n",
					"    .option(\"kustoDatabase\", \"bdbjkustodatabaseqingtest\") \\\r\n",
					"    .option(\"kustoTable\", \"Qingtest041801\") \\\r\n",
					"    .option(\"tableCreateOptions\",\"CreateIfNotExist\") \\\r\n",
					"    .trigger(once = True)\r\n",
					"\r\n",
					"kustoQ.start().awaitTermination(60*8)"
				],
				"attachments": null,
				"execution_count": 6
			}
		]
	}
}